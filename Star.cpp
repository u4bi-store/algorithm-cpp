#include <iostream>
#include <cstring>
#include "star.h"
using namespace std;

void triangleA(){
    int c, l; /*c = column l = low*/
    
    for(c=0; c < 5; c++){ /* 첫 포문의 시작점은 0부터 시작되며 5까지 c++됨 */
        for(l=0; l<=c; l++) cout << c; /* 즉 첫 포문이 돌때 내부 포문의 랭쓰는 0 같거나 더높을때까지니 별이 하나만 찍힘 */ 
        cout << endl; /* 한 포문 끝내고 endl 먹힘*/
      
      /* 그 후 도입 포문의 두번째번이 도는데 내부 포문의 랭쓰(c)는 당연히 1다.
         따라서 별이 두개가 찍힘. */
    }
  
  /* 
     이 과정을 반복. 도입 포문의 랭쓰만큼 진행 됨.
     
     0루프 : *
     1루프 : **
     2루프 : ***
     3루프 : ****
     4루프 : *****
  */
}

void triangleB(){
    int c, l; /*c = column l = low*/
    
    for(c=4; c>=0; c--){ /* 첫 포문의 시작점은 4부터 시작되며 0일때까지 c--됨 */
        for(l=0; l<=c; l++) cout << c; /* 첫 포문이 돌때 내부 포문의 랭쓰는 4 같거나 더높을때까지니 별이 다섯개가 찍힘*/
        cout << endl; /* 한 포문 끝내고 endl 먹힘*/
      
      /* 그 후 도입 포문의 두번째번이 도는데 내부 포문의 랭쓰(c)는 당연히 3이다.
         따라서 별이 4개가 찍힘. */
    }
  
  /*
     이 과정을 반복. 도입 포문의 랭쓰만큼 진행됨
     
     4루프 : *****
     3루프 : ****
     2루프 : ***
     1루프 : **
     0루프 : *
  */
}

void triangleC(){
    int c, l; /*c = column l = low*/
    
    for(c=0; c<5; c++){ /* 첫 포문의 시작점은 0부터 시작되며 5까지 c++됨 */
        for(l=0; l<4-c; l++) cout << " "; /* 즉 첫 포문이 돌때 내부 포문의 랭쓰는 4까지니 (4-현재루프c값) 즉 공백이 네번 찍힘 */
        for(l=0; l<=c; l++) cout << c;    /* 그 후 포문의 랭쓰는 0 같거나 더높을때까지니 즉 별이 하나만 찍힘 */
        cout << endl; /* 한 포문 끝내고 endl 먹힘*/
      
      /* 그 후 도입 포문의 두번째번이 도는데 내부 포문의 랭쓰(c)는 당연히 1이다.
         따라서 공백이 3개가 찍히고 별이 2개가 찍힌다. */
    }

  /*
     이 과정을 반복. 도입 포문의 랭쓰만큼 진행됨
     
     4루프 :     *
     3루프 :    **
     2루프 :   ***
     1루프 :  ****
     0루프 : *****
  */
}

void triangleD(){
    int c, l; /*c = column l = low*/
    
    for(c=4; c>=0; c--){ /* 첫 포문의 시작점은 4부터 시작되며 0일때까지 c--됨 */
        for(l=0; l<4-c; l++) cout << " "; /* 즉 첫 포문이 돌때 내부 포문의 랭쓰는 0까지니 (4-현재루프c값) 즉 공백이 0번 찍힘 */
        for(l=0; l<=c; l++) cout << c;    /* 그 후 포문의 랭쓰는 4 같거나 더높을때까지니 즉 별이 다섯개가 찍힘 */
        cout << endl; /* 한 포문 끝내고 endl 먹힘*/
      
      /* 그 후 도입 포문의 두번째번이 도는데 내부 포문의 랭쓰(c)는 당연히 1이다.
         따라서 공백이 3개가 찍히고 별이 2개가 찍힌다. */
    }
  
  /*
     이 과정을 반복. 도입 포문의 랭쓰만큼 진행됨
     
     4루프 : *****
     3루프 :  ****
     2루프 :   ***
     1루프 :    **
     0루프 :     *
  */
}

void Star::triangle(int type){
    switch(type){
        case 0: triangleA(); break;
        case 1: triangleB(); break;
        case 2: triangleC(); break;
        case 3: triangleD(); break;
        default:break;
    }
}

void Star::pyramid(){
    int c, l; /*c = column l = low*/
    for(c=0; c<5; c++){ /* 첫 포문의 시작점은 0부터 시작되며 5까지 c++됨 */
      for(l=0; l<4-c; l++) cout << " "; /* 즉 첫 포문이 돌때 내부 포문의 랭쓰는 4까지니 (4-현재루프c값) 즉 공백이 네번 찍힘 */
      for(l=0; l<c*2+1; l++) cout << c; /* 그 후 포문의 랭쓰는 1까지니 (c*2 + 1) 즉 별이 하나만 찍힘 */
      cout << endl; /* 한 포문 끝내고 endl 먹힘*/
      
      /* 그 후 도입 포문의 두번째번이 도는데 내부 포문의 랭쓰(c)는 당연히 1이다.
         따라서 공백이 3개가 찍히고 별이 3개가 찍힌다. 
         
         왜 3개가 찍히냐? c 곱하기 2에 더하기 1을 했으니 3개가 찍힘.*/
    }
  
  /*
     이 과정을 반복. 도입 포문의 랭쓰만큼 진행됨
     
     4루프 :     *
     3루프 :    ***
     2루프 :   *****
     1루프 :  *******
     0루프 : *********
  */
}

void Star::diamond(){
    int c, l; /*c = column l = low*/
    int temp =0; /* 삼각형 반전 랭쓰값 기준 0으로 구분*/
    
    for(c=0; c<11; c++){ /* 첫 포문의 시작점은 0부터 시작되며 11까지 c++됨 */
        
        temp=c-(11/2); /* 도입포문 랭쓰 c-(11/2) 즉 반나눠서 나온 템프 값은 -5 템프에 주입 (상하)*/
      
        if(temp < 0) temp *=-1; /* 만약 주입된 템프값보다 기준인 0이 더 큰수라면 반전시켜줌 (포문)*/
        
        /* 첫루프에서 시작 템프값은 -5 반전된 템프의 값은 5
        
           내부 포문의 랭쓰 지정 왜 지정하냐? l++로 공백 줄꺼임 0 기준으로 당연히 랭쓰값이 작으면 공백이 줄어들고 별이 많아짐
           도입포문 랭쓰을 반으로 나눴기 때문에*/
      
        for(l=0; l<temp; l++) cout << " "; /* 즉 첫 포문이 돌때 내부 포문의 랭쓰인 템프는 5까지니 즉 공백이 5번 찍힘 */
        /* 첫루프는 당연히 (다이아몬드의 첫 머리 부분) 도입부 포문 랭쓰 총 11자리 중앙은 6번째 자리 */
        for(l=0; l<11-temp * 2; l++) cout << "*"; /* 그 후 포문의 랭쓰는 1까지니(10 - temp*2) 즉 별이 하나만 찍힘 */
        cout << endl; /* 한 포문 끝내고 endl 먹힘*/

      /* 그 후 도입 포문의 두번째번이 도는데 내부 포문의 랭쓰(c)는 당연히 -4이다. (c- 11/2)
         따라서 공백이 4개가 찍히고 별이 3개가 찍힌다. (10 - temp*2)
         
         왜냐 ? 다이아몬드이기 때문에 -5부터 시작해서 -4 -3 -2 그리고 0까지 간후 다시 5까지 올라간다. */
    }
  /*
     이 과정을 반복. 도입 포문의 랭쓰만큼 진행됨
     
    10루프 -5 :      *         공백 5 별 1
     9루프 -4 :     ***        공백 4 별 3
     8루프 -3 :    *****       공백 3 별 5
     7루프 -2 :   *******      공백 2 별 7
     6루프 -1 :  *********     공백 1 별 9
     5루프  0 : ***********    공백 0 별 11
     4루프 -5 :  *********     공백 1 별 9
     3루프 -4 :   *******
     2루프 -3 :    *****
     1루프 -2 :     ***
     0루프 -1 :      *
  */
}